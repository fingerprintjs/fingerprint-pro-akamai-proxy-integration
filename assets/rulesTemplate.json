{
  "name": "Fingerprint",
  "children": [
    {
      "name": "Ingress Endpoint Parser",
      "children": [],
      "behaviors": [
        {
          "name": "setVariable",
          "options": {
            "valueSource": "EXTRACT",
            "transform": "SUBSTITUTE",
            "variableName": "PMUSER_FPJS_INGRESS_ENDPOINT",
            "extractLocation": "QUERY_STRING",
            "queryParameterName": "region",
            "regex": "^(\\w+)$",
            "replacement": "$0.__ingress_url__",
            "caseSensitive": false,
            "globalSubstitution": true
          }
        }
      ],
      "criteria": [
        {
          "name": "queryStringParameter",
          "options": {
            "matchOperator": "IS_NOT_ONE_OF",
            "matchWildcardName": false,
            "matchCaseSensitiveName": true,
            "parameterName": "region",
            "values": [
              "us"
            ],
            "matchWildcardValue": false,
            "matchCaseSensitiveValue": true,
            "escapeValue": false
          }
        }
      ],
      "criteriaMustSatisfy": "all",
      "comments": ""
    },
    {
      "name": "Agent Config Parser",
      "children": [],
      "behaviors": [
        {
          "name": "setVariable",
          "options": {
            "valueSource": "EXTRACT",
            "transform": "NONE",
            "variableName": "PMUSER_FPJS_PUBLIC_API_KEY",
            "extractLocation": "QUERY_STRING",
            "queryParameterName": "apiKey"
          }
        },
        {
          "name": "setVariable",
          "options": {
            "valueSource": "EXTRACT",
            "transform": "NONE",
            "variableName": "PMUSER_FPJS_AGENT_VERSION",
            "extractLocation": "QUERY_STRING",
            "queryParameterName": "version"
          }
        },
        {
          "name": "setVariable",
          "options": {
            "valueSource": "EXPRESSION",
            "transform": "NONE",
            "variableName": "PMUSER_FPJS_AGENT_REQ_PATH",
            "variableValue": "/v{{user.PMUSER_FPJS_AGENT_VERSION}}/{{user.PMUSER_FPJS_PUBLIC_API_KEY}}"
          }
        },
        {
          "name": "setVariable",
          "options": {
            "valueSource": "EXTRACT",
            "transform": "NONE",
            "variableName": "PMUSER_FPJS_AGENT_LOADER_VERSION",
            "extractLocation": "QUERY_STRING",
            "queryParameterName": "loaderVersion"
          }
        }
      ],
      "criteria": [],
      "criteriaMustSatisfy": "all",
      "comments": ""
    },
    {
      "name": "Agent Config For Loader Version",
      "children": [],
      "behaviors": [
        {
          "name": "setVariable",
          "options": {
            "valueSource": "EXPRESSION",
            "transform": "NONE",
            "variableName": "PMUSER_FPJS_AGENT_REQ_PATH",
            "variableValue": "{{user.PMUSER_FPJS_AGENT_REQ_PATH}}/loader_v{{user.PMUSER_FPJS_AGENT_LOADER_VERSION}}.js"
          }
        }
      ],
      "criteria": [
        {
          "name": "matchVariable",
          "options": {
            "matchOperator": "IS_NOT_EMPTY",
            "variableName": "PMUSER_FPJS_AGENT_LOADER_VERSION"
          }
        }
      ],
      "criteriaMustSatisfy": "all",
      "comments": ""
    },
    {
      "name": "Origin for Agent",
      "children": [
        {
          "name": "Remove Cookies for Agent",
          "children": [],
          "behaviors": [
            {
              "name": "modifyIncomingRequestHeader",
              "options": {
                "action": "DELETE",
                "standardDeleteHeaderName": "OTHER",
                "customHeaderName": "Cookie"
              }
            }
          ],
          "criteria": [],
          "criteriaMustSatisfy": "all",
          "comments": ""
        }
      ],
      "behaviors": [
        {
          "name": "origin",
          "options": {
            "originType": "CUSTOMER",
            "forwardHostHeader": "ORIGIN_HOSTNAME",
            "cacheKeyHostname": "ORIGIN_HOSTNAME",
            "compress": true,
            "enableTrueClientIp": false,
            "verificationMode": "THIRD_PARTY",
            "originSni": true,
            "httpPort": 80,
            "httpsPort": 443,
            "hostname": "__cdn_url__",
            "originCertificate": "",
            "ports": ""
          }
        },
        {
          "name": "rewriteUrl",
          "options": {
            "behavior": "REGEX_REPLACE",
            "matchMultiple": false,
            "keepQueryString": true,
            "matchRegex": ".*",
            "targetRegex": "{{user.PMUSER_FPJS_AGENT_REQ_PATH}}?ii=fingerprint-pro-akamai/{{user.PMUSER_FPJS_INTEGRATION_VERSION}}/procdn&{{builtin.AK_QUERY}}"
          }
        },
        {
          "name": "caching",
          "options": {
            "behavior": "CACHE_CONTROL_AND_EXPIRES",
            "mustRevalidate": false,
            "defaultTtl": "0s",
            "cacheControlDirectives": "",
            "enhancedRfcSupport": true,
            "honorPrivate": true,
            "honorMustRevalidate": true,
            "cacheabilitySettings": "",
            "honorNoStore": true,
            "honorNoCache": true,
            "expirationSettings": "",
            "honorMaxAge": true,
            "honorSMaxage": true,
            "revalidationSettings": "",
            "honorProxyRevalidate": true
          }
        },
        {
          "name": "downstreamCache",
          "options": {
            "behavior": "TUNNEL_ORIGIN"
          }
        },
        {
          "name": "allowTransferEncoding",
          "options": {
            "enabled": true
          }
        },
        {
          "name": "brotli",
          "options": {
            "enabled": true
          }
        }
      ],
      "criteria": [
        {
          "name": "path",
          "options": {
            "matchOperator": "MATCHES_ONE_OF",
            "matchCaseSensitive": false,
            "normalize": false,
            "values": [
              "/__integration_path__/__agent_path__"
            ]
          }
        }
      ],
      "criteriaMustSatisfy": "all",
      "comments": ""
    },
    {
      "name": "Origin for Ingress",
      "children": [
        {
          "name": "Proxy Headers",
          "children": [],
          "behaviors": [
            {
              "name": "modifyIncomingRequestHeader",
              "options": {
                "action": "MODIFY",
                "standardModifyHeaderName": "OTHER",
                "newHeaderValue": "{{user.PMUSER_FPJS_PROXY_SECRET}}",
                "avoidDuplicateHeaders": true,
                "customHeaderName": "FPJS-Proxy-Secret"
              }
            },
            {
              "name": "modifyIncomingRequestHeader",
              "options": {
                "action": "MODIFY",
                "standardModifyHeaderName": "OTHER",
                "newHeaderValue": "{{builtin.AK_HOST}}",
                "avoidDuplicateHeaders": true,
                "customHeaderName": "FPJS-Proxy-Forwarded-Host"
              }
            }
          ],
          "criteria": [],
          "criteriaMustSatisfy": "all",
          "comments": ""
        },
        {
          "name": "Remove Cookies if no _iidt",
          "children": [],
          "behaviors": [
            {
              "name": "modifyIncomingRequestHeader",
              "options": {
                "action": "DELETE",
                "standardDeleteHeaderName": "OTHER",
                "customHeaderName": "Cookie"
              }
            }
          ],
          "criteria": [
            {
              "name": "requestCookie",
              "options": {
                "matchOperator": "DOES_NOT_EXIST",
                "matchWildcardName": false,
                "matchCaseSensitiveName": true,
                "cookieName": "_iidt"
              }
            }
          ],
          "criteriaMustSatisfy": "all",
          "comments": ""
        },
        {
          "name": "Filter Cookies except _iidt",
          "children": [],
          "behaviors": [
            {
              "name": "setVariable",
              "options": {
                "valueSource": "EXTRACT",
                "transform": "SUBSTITUTE",
                "variableName": "PMUSER_FPJS_REQUEST_COOKIE",
                "extractLocation": "CLIENT_REQUEST_HEADER",
                "headerName": "Cookie",
                "caseSensitive": false,
                "regex": ".*(_iidt=[^;]+).*",
                "replacement": "$1",
                "globalSubstitution": true
              }
            },
            {
              "name": "modifyIncomingRequestHeader",
              "options": {
                "action": "MODIFY",
                "standardModifyHeaderName": "OTHER",
                "newHeaderValue": "{{user.PMUSER_FPJS_REQUEST_COOKIE}}",
                "avoidDuplicateHeaders": false,
                "customHeaderName": "Cookie"
              }
            }
          ],
          "criteria": [
            {
              "name": "requestCookie",
              "options": {
                "matchOperator": "EXISTS",
                "matchWildcardName": false,
                "matchCaseSensitiveName": true,
                "cookieName": "_iidt"
              }
            }
          ],
          "criteriaMustSatisfy": "all",
          "comments": ""
        }
      ],
      "behaviors": [
        {
          "name": "origin",
          "options": {
            "originType": "CUSTOMER",
            "forwardHostHeader": "ORIGIN_HOSTNAME",
            "cacheKeyHostname": "ORIGIN_HOSTNAME",
            "compress": true,
            "enableTrueClientIp": false,
            "verificationMode": "THIRD_PARTY",
            "originSni": true,
            "httpPort": 80,
            "httpsPort": 443,
            "hostname": "{{user.PMUSER_FPJS_INGRESS_ENDPOINT}}",
            "originCertificate": "",
            "ports": ""
          }
        },
        {
          "name": "rewriteUrl",
          "options": {
            "behavior": "REGEX_REPLACE",
            "matchMultiple": false,
            "keepQueryString": true,
            "matchRegex": "\\/__integration_path__\\/__result_path__(?:\\/[^\\/?]+)*\\/?(?:\\?.*)?$",
            "targetRegex": "/?ii=fingerprint-pro-akamai/{{user.PMUSER_FPJS_INTEGRATION_VERSION}}/ingress&{{builtin.AK_QUERY}}"
          }
        },
        {
          "name": "modifyIncomingRequestHeader",
          "options": {
            "action": "MODIFY",
            "standardModifyHeaderName": "OTHER",
            "newHeaderValue": "{{builtin.AK_CLIENT_REAL_IP}}",
            "avoidDuplicateHeaders": true,
            "customHeaderName": "FPJS-Proxy-Client-IP"
          }
        }
      ],
      "criteria": [
        {
          "name": "path",
          "options": {
            "matchOperator": "MATCHES_ONE_OF",
            "matchCaseSensitive": false,
            "normalize": false,
            "values": [
              "/__integration_path__/__result_path__"
            ]
          }
        }
      ],
      "criteriaMustSatisfy": "all",
      "comments": ""
    },
    {
      "name": "Origin for Browser Cache",
      "children": [
        {
          "name": "Remove Cookies for Browser Cache",
          "children": [],
          "behaviors": [
            {
              "name": "modifyIncomingRequestHeader",
              "options": {
                "action": "DELETE",
                "standardDeleteHeaderName": "OTHER",
                "customHeaderName": "Cookie"
              }
            }
          ],
          "criteria": [],
          "criteriaMustSatisfy": "all",
          "comments": ""
        }
      ],
      "behaviors": [
        {
          "name": "origin",
          "options": {
            "originType": "CUSTOMER",
            "forwardHostHeader": "ORIGIN_HOSTNAME",
            "cacheKeyHostname": "ORIGIN_HOSTNAME",
            "compress": true,
            "enableTrueClientIp": false,
            "verificationMode": "THIRD_PARTY",
            "originSni": true,
            "httpPort": 80,
            "httpsPort": 443,
            "hostname": "{{user.PMUSER_FPJS_INGRESS_ENDPOINT}}",
            "originCertificate": "",
            "ports": ""
          }
        },
        {
          "name": "rewriteUrl",
          "options": {
            "behavior": "REGEX_REPLACE",
            "matchMultiple": false,
            "keepQueryString": true,
            "matchRegex": "\\/__integration_path__\\/__result_path__(.*)",
            "targetRegex": "$1"
          }
        },
        {
          "name": "caching",
          "options": {
            "behavior": "CACHE_CONTROL_AND_EXPIRES",
            "mustRevalidate": false,
            "defaultTtl": "0s",
            "cacheControlDirectives": "",
            "enhancedRfcSupport": true,
            "honorPrivate": true,
            "honorMustRevalidate": true,
            "cacheabilitySettings": "",
            "honorNoStore": true,
            "honorNoCache": true,
            "expirationSettings": "",
            "honorMaxAge": true,
            "honorSMaxage": true,
            "revalidationSettings": "",
            "honorProxyRevalidate": true
          }
        },
        {
          "name": "downstreamCache",
          "options": {
            "behavior": "TUNNEL_ORIGIN"
          }
        }
      ],
      "criteria": [
        {
          "name": "path",
          "options": {
            "matchOperator": "MATCHES_ONE_OF",
            "matchCaseSensitive": false,
            "normalize": false,
            "values": [
              "/__integration_path__/__result_path__/*"
            ]
          }
        }
      ],
      "criteriaMustSatisfy": "all",
      "comments": ""
    },
    {
      "name": "Status Path",
      "children": [],
      "behaviors": [
        {
          "name": "setVariable",
          "options": {
            "valueSource": "GENERATE",
            "transform": "NONE",
            "variableName": "PMUSER_FPJS_STATUS_STYLE_NONCE",
            "generator": "HEXRAND",
            "numberOfBytes": 16
          }
        },
        {
          "name": "constructResponse",
          "options": {
            "enabled": true,
            "responseCode": 200,
            "forceEviction": false,
            "ignorePurge": false,
            "body": "<html lang='en-US'>\n<head>\n<meta charset='utf-8'/>\n<title>Fingerprint Pro Akamai Integration</title>\n<link rel='icon' type='image/x-icon' href='https://fingerprint.com/img/favicon.ico'>\n<style nonce='{{user.PMUSER_FPJS_STATUS_STYLE_NONCE}}'>\n  h1, span {\n    display: block;\n    padding-top: 1em;\n    padding-bottom: 1em;\n    text-align: center;\n  }\n</style>\n</head>\n<body>\n<h1>Fingerprint Pro Akamai Integration</h1>\n<span>Your Akamai Integration is deployed</span>\n<span>\nIntegration version: {{user.PMUSER_FPJS_INTEGRATION_VERSION}}\n</span>\n<span>\nPlease reach out our support via <a href='mailto:support@fingerprint.com'>support@fingerprint.com</a> if you have any issues\n</span>\n</body>\n</html>"
          }
        },
        {
          "name": "modifyOutgoingResponseHeader",
          "options": {
            "action": "ADD",
            "standardAddHeaderName": "CONTENT_TYPE",
            "headerValue": "text/html"
          }
        },
        {
          "name": "modifyOutgoingResponseHeader",
          "options": {
            "action": "ADD",
            "standardAddHeaderName": "OTHER",
            "headerValue": "default-src 'none'; img-src https://fingerprint.com; style-src 'nonce-{{user.PMUSER_FPJS_STATUS_STYLE_NONCE}}'",
            "customHeaderName": "Content-Security-Policy"
          }
        }
      ],
      "criteria": [
        {
          "name": "path",
          "options": {
            "matchOperator": "MATCHES_ONE_OF",
            "matchCaseSensitive": false,
            "normalize": false,
            "values": [
              "/__integration_path__/status"
            ]
          }
        }
      ],
      "criteriaMustSatisfy": "all",
      "comments": ""
    },
    {
      "name": "Filter HSTS Header",
      "children": [],
      "behaviors": [
        {
          "name": "modifyOutgoingResponseHeader",
          "options": {
            "action": "DELETE",
            "standardDeleteHeaderName": "OTHER",
            "customHeaderName": "Strict-Transport-Security"
          }
        }
      ],
      "criteria": [],
      "criteriaMustSatisfy": "all",
      "comments": ""
    }
  ],
  "behaviors": [
    {
      "name": "setVariable",
      "options": {
        "valueSource": "EXPRESSION",
        "transform": "NONE",
        "variableName": "PMUSER_FPJS_INTEGRATION_VERSION",
        "variableValue": "__integration_version__"
      }
    },
    {
      "name": "setVariable",
      "options": {
        "valueSource": "EXPRESSION",
        "transform": "NONE",
        "variableName": "PMUSER_FPJS_PROXY_SECRET",
        "variableValue": "__proxy_secret__"
      }
    },
    {
      "name": "brotli",
      "options": {
        "enabled": true
      }
    },
    {
      "name": "allowTransferEncoding",
      "options": {
        "enabled": true
      }
    }
  ],
  "criteria": [
    {
      "name": "path",
      "options": {
        "matchOperator": "MATCHES_ONE_OF",
        "matchCaseSensitive": false,
        "normalize": false,
        "values": [
          "/__integration_path__",
          "/__integration_path__/*"
        ]
      }
    }
  ],
  "criteriaMustSatisfy": "all",
  "comments": ""
}
